prajwalkedari@Prajwal-Pc:~$ gpg --full-generate-k
gpg (GnuPG) 2.2.27; Copyright (C) 2021 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Please select what kind of key you want:
   (1) RSA and RSA (default)
   (2) DSA and Elgamal
   (3) DSA (sign only)
   (4) RSA (sign only)
  (14) Existing key from card
Your selection? 1
RSA keys may be between 1024 and 4096 bits long.
What keysize do you want? (3072) 4096
Requested keysize is 4096 bits
Please specify how long the key should be valid.
         0 = key does not expire
      <n>  = key expires in n days
      <n>w = key expires in n weeks
      <n>m = key expires in n months
      <n>y = key expires in n years
Key is valid for? (0) 0
Key does not expire at all
Is this correct? (y/N) 
Key is valid for? (0) 
Key does not expire at all
Is this correct? (y/N) y

GnuPG needs to construct a user ID to identify your key.

Real name: Prajwal Kedari
Email address: prajwalkedar25@gmail.com
Comment: "This Prajwal from std 12 (30-nov-2020) , i Am trying to gpg verfield github .. this an comment"
Invalid character in comment
Comment: This Prajwal from std 12 (30-nov-2020) , i Am trying to gpg verfield github .. this an comment
Invalid character in comment
Comment: This Prajwal from std 12 30-nov-2020 , i Am trying to gpg verfield github .. this an comment
You selected this USER-ID:
    "Prajwal Kedari (This Prajwal from std 12 30-nov-2020 , i Am trying to gpg verfield github .. this an comment) <prajwalkedar25@gmail.com>"

Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? o
We need to generate a lot of random bytes. It is a good idea to perform
some other action (type on the keyboard, move the mouse, utilize the
disks) during the prime generation; this gives the random number
generator a better chance to gain enough entropy.
We need to generate a lot of random bytes. It is a good idea to perform
some other action (type on the keyboard, move the mouse, utilize the
disks) during the prime generation; this gives the random number
generator a better chance to gain enough entropy.
gpg: /home/prajwalkedari/.gnupg/trustdb.gpg: trustdb created
gpg: key 77DF7395D0F9FEC4 marked as ultimately trusted
gpg: directory '/home/prajwalkedari/.gnupg/openpgp-revocs.d' created
gpg: revocation certificate stored as '/home/prajwalkedari/.gnupg/openpgp-revocs.d/C266AD93D42096B551D58FF777DF7395D0F9FEC4.rev'
public and secret key created and signed.

pub   rsa4096 2021-11-30 [SC]
      C266AD93D42096B551D58FF777DF7395D0F9FEC4
uid                      Prajwal Kedari (This Prajwal from std 12 30-nov-2020 , i Am trying to gpg verfield github .. this an comment) <prajwalkedar25@gmail.com>
sub   rsa4096 2021-11-30 [E]
